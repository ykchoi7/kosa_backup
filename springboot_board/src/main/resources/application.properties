server.port = 8882
#logging.level.root=debug
logging.level.root=warn

#logging파일의 경로를 지정한다
#파일명을 spring.log이다
logging.file.path=./log

logging.logback.rollingpolicy.max-file-size=1KB
logging.pattern.console=%-5level %d{yy-MM-dd HH:mm:ss}-%C-%msg%n


#profile이란? 개발환경 (배포용/디버그용/테스트용(qa)/개발중(dev)/서비스 등)
#환경에 따라 설정값을 다르게 로딩할 필요가 있다
#springboot에서는 profile을 활용해서 설정값을 다르게 취급할 수 있다
#spring.profiles.active 프로퍼티와 application-<profile>.properties 파일로 해결한다

#profile을 결정한다
#profile이 없으면 application.properties파일을 사용하고, 있으면 해당 프로필파일을 사용한다
#profile이 있으면 application.properties파일의 property와 application-<profile>.properties파일의 property가 모두 사용된다

#단, 여러파일의 property가 중복될 경우 application-<profile>.properties파일의 property가 우선 사용된다
spring.profiles.active=dev
#중복된 프로퍼티(my.info.name)는 사용하는 profile의 프로퍼티값이 우선시된다 -> application-dev.properties의 dev를 사용
#중복되지 않은 프로퍼티(my.info.deploy.msg / my.info.dev.msg)는 둘 다 사용 가능
#프로필 지정을 따로 안해주면 application.properties에 있는 프로퍼티 2개만 사용 

#사용자정의 프로퍼티
my.info.deploy.msg=ThisIsDeployProfile
my.info.name=deploy